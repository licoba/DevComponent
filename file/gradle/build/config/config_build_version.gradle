// =================
// = 版本信息统一处理 =
// =================

// 获取 lib 名 => settings.gradle 例 include ':core_lib_engine'
def libName = project.getName() // core_lib_engine

// 模块化编译开关 ( true = 每个模块都是独立应用, false = 整合运行 )
boolean isModular = isModular.toBoolean()

// ========
// = core =
// ========

// 从 file/gradle/modular.gradle 中获取对应的 core lib 版本信息
if (libName.startsWith("core")) {
    def coreLibrary = coreLibraryVersion[libName]
    if (coreLibrary != null) {
        def coreLibVersionCode = coreLibrary.versionCode
        def coreLibVersionName = coreLibrary.versionName

        if (coreLibVersionCode != null && coreLibVersionName != null) {
            android.defaultConfig {
                versionCode coreLibVersionCode
                versionName coreLibVersionName
                // Core Library Version
                buildConfigField("int", libName + "_VersionCode", "${versionCode}")
                buildConfigField("String", libName + "_Version", "\"${versionName}\"")
                // 模块名
                buildConfigField("String", libName + "_NAME", "\"${coreLibrary.moduleName}\"")
            }
        }
    }
}

// ==========
// = module =
// ==========

// 从 file/gradle/modular.gradle 中获取对应的 module 版本信息
if (libName.startsWith("module_")) {
    def modular = modularVersion[libName]
    if (modular != null) {
        def moduleVersionCode = modular.versionCode
        def moduleVersionName = modular.versionName

        if (moduleVersionCode != null && moduleVersionName != null) {
            android.defaultConfig {
                versionCode moduleVersionCode
                versionName moduleVersionName
                // Module Version
                buildConfigField("int", libName + "_VersionCode", "${versionCode}")
                buildConfigField("String", libName + "_Version", "\"${versionName}\"")
                // 模块化编译开关值
                buildConfigField("boolean", "isModular", "${isModular}")
                // 模块名
                buildConfigField("String", "MODULE_NAME", "\"${modular.moduleName}\"")
            }
        }
    }
}

// =================
// = 资源统一前缀处理 =
// =================

android {

    if (libName.startsWith("core")) {
        // 属于 core module
        resourcePrefix libName.replaceAll("_lib", "") + "_"
    } else if (libName.startsWith("module_")) {
        // 属于各个组件 module
        resourcePrefix libName.replaceAll("module_", "") + "_"
    } else if (libName.startsWith("lib_")) {
//        // 属于各个封装 libs
//        resourcePrefix libName.replaceAll("lib_", "") + "_"
//        resourcePrefix libName
    }
    printf("\n%s - %s", libName, android.resourcePrefix)
}