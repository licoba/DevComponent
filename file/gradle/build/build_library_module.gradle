apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

def libName = project.getName()
def modular = modularVersion[libName]
// 模块化编译开关 ( true = 每个模块都是独立应用, false = 整合运行 )
boolean isModular = isModular.toBoolean()

android {

    compileSdkVersion versions.compileSdkVersion

    defaultConfig {
        minSdkVersion versions.lib_minSdkVersion
        // 混淆配置
        consumerProguardFiles 'proguard-rules.pro'

        // 模块化编译开关值
        buildConfigField("boolean", "isModular", "${isModular}")
        // 模块名
        buildConfigField("String", "MODULE_NAME", "\"${modular.moduleName}\"")
    }

    buildFeatures {
        // Data Binding
        dataBinding = true
        // View Binding
        viewBinding = true
    }

    lintOptions {
        // https://blog.csdn.net/berber78/article/details/60766091
        abortOnError false
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility versions.javaVersion
        targetCompatibility versions.javaVersion
    }

    kotlinOptions {
        jvmTarget = versions.javaVersion_str
    }
}

dependencies {

    // 核心基础依赖库
    api project(':core')
}

// 编码设置
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}