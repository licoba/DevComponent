apply from: rootProject.file(files.lib_app_kotlin_gradle)

// 获取 lib 名 => settings.gradle 例 include ':core_lib_engine'
def libName = project.getName() // core_lib_engine
// 从 file/gradle/version.gradle 中获取对应的 lib 版本信息
def libVersionCode = versions.get(libName + "_versionCode")
def libVersionName = versions.get(libName + "_versionName")

if (libVersionCode != null && libVersionName != null) {
    android.defaultConfig {
        versionCode libVersionCode
        versionName libVersionName
        // Module Version
        buildConfigField "int", libName + "_VersionCode", "${versionCode}"
        buildConfigField "String", libName + "_Version", "\"${versionName}\""
    }
}

// ===================
// = 资源统一前缀处理 =
// ===================

android {

    if (libName.startsWith("core_")) {
        // 属于 core module
        resourcePrefix libName.replaceAll("_lib", "") + "_"
    } else if (libName.startsWith("module_")) {
        // 属于各个组件 module
        resourcePrefix libName.replaceAll("module_", "") + "_"
    } else if (libName.startsWith("lib_")) {
//        // 属于各个封装 libs
//        resourcePrefix libName.replaceAll("lib_", "") + "_"
//        resourcePrefix libName
    }
    printf("\n%s - %s", libName, android.resourcePrefix)
}